generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default("")
  created_at     DateTime     @default(now())
  updated_at     DateTime     @updatedAt
  deleted_at     DateTime?
  email          String       @unique
  password       String?
  last_signed_in DateTime?
  emailVerified  DateTime?
  image          String?
  name           String?
  accounts       Account[]
  forms          Form[]
  sessions       Session[]
  profile        UserProfile?
  roles          UserRole[]
  viewSettings   FormViewSettings[]

  @@index([email])
  @@index([deleted_at])
}

model UserProfile {
  id         String    @id @default("")
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  user_id    String    @unique
  first_name String?
  last_name  String?
  user       User      @relation(fields: [user_id], references: [id])

  @@index([user_id])
  @@index([deleted_at])
}

model Role {
  id         String     @id @default("")
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  deleted_at DateTime?
  name       String     @unique
  users      UserRole[]

  @@index([name])
  @@index([deleted_at])
}

model UserRole {
  id         String    @id @default("")
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  user_id    String
  role_id    String
  role       Role      @relation(fields: [role_id], references: [id])
  user       User      @relation(fields: [user_id], references: [id])

  @@unique([user_id, role_id])
  @@index([user_id])
  @@index([role_id])
  @@index([deleted_at])
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default("")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model FormFieldType {
  id          String              @id @default("")
  created_at  DateTime            @default(now())
  updated_at  DateTime            @updatedAt
  deleted_at  DateTime?
  type        String              @unique
  name        String
  description String
  icon        String?
  category    String
  properties  FormFieldProperty[]
  templates   FormFieldTemplate[]

  @@index([type])
  @@index([category])
  @@index([deleted_at])
}

model FormFieldProperty {
  id               String        @id @default("")
  created_at       DateTime      @default(now())
  updated_at       DateTime      @updatedAt
  deleted_at       DateTime?
  field_type_id    String
  property_key     String
  property_type    String
  is_required      Boolean       @default(false)
  default_value    String?
  validation_rules String?
  display_name     String
  description      String?
  input_type       String
  options          String?
  field_type       FormFieldType @relation(fields: [field_type_id], references: [id])

  @@unique([field_type_id, property_key])
  @@index([field_type_id])
  @@index([property_key])
  @@index([deleted_at])
}

model FormFieldTemplate {
  id             String        @id @default("")
  created_at     DateTime      @default(now())
  updated_at     DateTime      @updatedAt
  deleted_at     DateTime?
  field_type_id  String
  name           String
  description    String?
  category       String?
  default_config String
  field_type     FormFieldType @relation(fields: [field_type_id], references: [id])

  @@index([field_type_id])
  @@index([category])
  @@index([deleted_at])
}

model FormTheme {
  id           String    @id @default("")
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  deleted_at   DateTime?
  name         String    @unique
  display_name String
  description  String?
  category     String
  config       String
  preview_url  String?

  @@index([name])
  @@index([category])
  @@index([deleted_at])
}

model FormTemplate {
  id          String    @id @default("")
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?
  name        String
  description String?
  category    String
  tags        String?
  config      String
  preview_url String?
  usage_count Int       @default(0)

  @@index([name])
  @@index([category])
  @@index([usage_count])
  @@index([deleted_at])
}

model Form {
  id             String         @id @default("")
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt
  deleted_at     DateTime?
  user_id        String
  title          String
  description    String?
  status         String
  config         String
  share_url      String?
  response_count Int            @default(0)
  user           User           @relation(fields: [user_id], references: [id])
  fields         FormField[]
  responses      FormResponse[]
  viewSettings   FormViewSettings?
  stylingVariables FormStylingVariable[]
  styleTokens    FormStyleToken[]

  @@index([user_id])
  @@index([status])
  @@index([created_at])
  @@index([deleted_at])
}

model FormField {
  id           String                 @id @default("")
  created_at   DateTime               @default(now())
  updated_at   DateTime               @updatedAt
  deleted_at   DateTime?
  form_id      String
  index        Int
  type         String
  config       String
  form         Form                   @relation(fields: [form_id], references: [id])
  translations FormFieldTranslation[]

  @@index([form_id])
  @@index([form_id, index])
  @@index([deleted_at])
}

model FormFieldTranslation {
  id               String    @id @default("")
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  deleted_at       DateTime?
  field_id         String
  language_code    String
  property_key     String
  translated_value String
  field            FormField @relation(fields: [field_id], references: [id])

  @@unique([field_id, language_code, property_key])
  @@index([field_id])
  @@index([language_code])
  @@index([deleted_at])
}

model FormResponse {
  id         String    @id @default("")
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  form_id    String
  data       String
  ip_address String?
  user_agent String?
  form       Form      @relation(fields: [form_id], references: [id])

  @@index([form_id])
  @@index([created_at])
  @@index([deleted_at])
}

model FormViewSettings {
  id                String    @id @default("")
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  deleted_at        DateTime?
  form_id           String    @unique
  user_id           String
  visible_fields    String    // JSON array of field IDs that should be visible in table view
  table_sort_field  String?   // Field ID to sort by
  table_sort_order  String?   // 'asc' or 'desc'
  form              Form      @relation(fields: [form_id], references: [id])
  user              User      @relation(fields: [user_id], references: [id])

  @@index([form_id])
  @@index([user_id])
  @@index([deleted_at])
}

model FormStylingVariable {
  id             String   @id @default("")
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  deleted_at     DateTime?
  form_id        String
  variable_name  String
  variable_value String
  form           Form     @relation(fields: [form_id], references: [id], onDelete: Cascade)

  @@unique([form_id, variable_name])
  @@index([form_id])
  @@index([variable_name])
  @@index([deleted_at])
}

model FormStylingDefault {
  id             String   @id @default("")
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  deleted_at     DateTime?
  variable_name  String   @unique
  default_value  String
  description    String?
  category       String
  data_type      String   // 'color', 'size', 'font', 'spacing', 'border', 'shadow'
  display_name   String?
  is_user_editable Boolean @default(true)

  @@index([variable_name])
  @@index([category])
  @@index([data_type])
  @@index([deleted_at])
}

model FormStyleTokenDefault {
  id               String  @id @default("")
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  deleted_at       DateTime?
  token_name       String   @unique
  default_value    String
  description      String?
  category         String
  data_type        String
  display_name     String?
  is_user_editable Boolean  @default(true)
  tokens           FormStyleToken[]

  @@index([token_name])
  @@index([category])
  @@index([data_type])
  @@index([deleted_at])
}

model FormStyleToken {
  id         String     @id @default("")
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  deleted_at DateTime?
  form_id    String
  token_name String
  token_value String
  form       Form       @relation(fields: [form_id], references: [id], onDelete: Cascade)
  default    FormStyleTokenDefault? @relation(fields: [token_name], references: [token_name])

  @@unique([form_id, token_name])
  @@index([form_id])
  @@index([token_name])
  @@index([deleted_at])
}
